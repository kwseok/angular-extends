!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"),require("angular"));else if("function"==typeof define&&define.amd)define(["jquery","angular"],t);else{var n="object"==typeof exports?t(require("jquery"),require("angular")):t(e.jQuery,e.angular);for(var u in n)("object"==typeof exports?exports:e)[u]=n[u]}}(this,function(e,t){return function(e){function t(u){if(n[u])return n[u].exports;var r=n[u]={exports:{},id:u,loaded:!1};return e[u].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){(function(u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(6),u.module("ngExtends.directives",["ngExtends.directives.countTo"]),t["default"]=u.module("ngExtends",["ngExtends.directives"]),e.exports=t["default"]}).call(t,n(1))},function(e,t,n){(function(t){"use strict";var u=n(3)["default"],r=n(5),o=u(r);if(!t)throw new Error("Angular.extends requires a AngularJS");e.exports=o["default"]}).call(t,n(2))},function(e,t,n){"use strict";var u=n(3)["default"],r=n(4),o=u(r);if(!o["default"])throw new Error("jQuery.extends requires a jQuery");e.exports=o["default"]},function(e,t){"use strict";t["default"]=function(e){return e&&e.__esModule?e:{"default":e}},t.__esModule=!0},function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t,n){(function(t){"use strict";e.exports=t.module("ngExtends.directives.countTo",[]).directive("extCountTo",["$timeout",function(e){return{replace:!1,scope:!0,link:function(t,n,u){var r,o,i,l,c,a,s,d,f,p;return i=n[0],c=null,a=null,f=null,d=null,o=null,l=null,r=function(){var e;return a=30,d=0,t.timoutId=null,o=parseInt(u.countTo)||0,t.value=parseInt(u.value,10)||0,e=1e3*parseFloat(u.duration)||0,f=Math.ceil(e/a),l=(o-t.value)/f,c=t.value},p=function(){return t.timoutId=e(function(){return c+=l,d++,d>=f?(e.cancel(t.timoutId),c=o,i.textContent=o):(i.textContent=Math.round(c),p())},a)},s=function(){return null!=t.timoutId&&e.cancel(t.timoutId),r(),p()},u.$observe("countTo",function(e){return null!=e?s():void 0}),void u.$observe("value",function(){return s()})}}}])}).call(t,n(1))}])});
//# sourceMappingURL=data:application/json;base64,
