!function(t,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n(require("jquery"),require("angular"));else if("function"==typeof define&&define.amd)define(["jquery","angular"],n);else{var e="object"==typeof exports?n(require("jquery"),require("angular")):n(t.jQuery,t.angular);for(var r in e)("object"==typeof exports?exports:t)[r]=e[r]}}(this,function(t,n){return function(t){function n(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){(function(t){"use strict";e(6),e(7),e(8),e(9),e(10),e(11),e(12),e(13),e(14),e(15),e(16),e(18),e(19),t.module("ngExtends.directives",["ngExtends.directives.countTo","ngExtends.directives.domInit","ngExtends.directives.focusMe","ngExtends.directives.lower","ngExtends.directives.repeatDone","ngExtends.directives.rotate2d","ngExtends.directives.upper"]),t.module("ngExtends.filters",["ngExtends.filters.arrays","ngExtends.filters.strings"]),t.module("ngExtends.services",["ngExtends.services.locationState","ngExtends.services.playRoutes","ngExtends.services.retainScroll","ngExtends.services.searchForm"]),t.module("ngExtends",["ngExtends.directives","ngExtends.filters","ngExtends.services"])}).call(n,e(1))},function(t,n,e){(function(n){"use strict";var r=e(3)["default"],o=e(5),i=r(o);if(!n)throw new Error("Angular.extends requires a AngularJS");t.exports=i["default"]}).call(n,e(2))},function(t,n,e){"use strict";var r=e(3)["default"],o=e(4),i=r(o);if(!i["default"])throw new Error("Angular.extends requires a jQuery");t.exports=i["default"]},function(t,n){"use strict";n["default"]=function(t){return t&&t.__esModule?t:{"default":t}},n.__esModule=!0},function(n,e){n.exports=t},function(t,e){t.exports=n},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.countTo",[]).directive("exCountTo",["$timeout",function(t){return{replace:!1,scope:!0,link:function(n,e,r){var o,i,u,s,c,l,f,a,d,p;u=e[0],c=null,l=null,d=null,a=null,i=null,s=null,o=function(){var t;l=30,a=0,n.timoutId=null,i=parseInt(r.exCountTo)||0,n.value=parseInt(r.value,10)||0,t=1e3*parseFloat(r.duration)||0,d=Math.ceil(t/l),s=(i-n.value)/d,c=n.value},p=function(){n.timoutId=t(function(){return c+=s,a++,a>=d?(t.cancel(n.timoutId),c=i,u.textContent=i):(u.textContent=Math.round(c),p())},l)},f=function(){null!=n.timoutId&&t.cancel(n.timoutId),o(),p()},r.$observe("exCountTo",function(t){return null!=t?f():void 0}),r.$observe("value",function(){return f()})}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.domInit",[]).directive("exDomInit",[function(){return{restrict:"A",link:function(t,n,e){e.$observe("exDomInit",function(e){var r;return"function"==typeof(r=t.$eval(e))?r(n):void 0})}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.focusMe",[]).directive("exFocusMe",[function(){return{scope:{trigger:"=exFocusMe"},link:function(t,n){t.$watch("trigger",function(e){var r;"boolean"==typeof e&&("function"==typeof n[r=e?"focus":"blur"]&&n[r](),t.trigger=null)})}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.lower",[]).directive("exLower",[function(){return{require:"ngModel",link:function(t,n,e,r){var o;o=function(t){var n;return n=t?t.toLowerCase():t,n!==t&&(r.$setViewValue(n),r.$render()),n},r.$parsers.push(o),o(t[e.ngModel])}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.repeatDone",[]).directive("exRepeatDone",[function(){return{restrict:"A",link:function(t,n,e){null==e.ngRepeat&&null==e.ngRepeatStart||!t.$last||e.$observe("exRepeatDone",function(e){var r;return"function"==typeof(r=t.$eval(e))?r(n):void 0})}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.rotate2d",[]).directive("exRotate2d",[function(){return{scope:{value:"=exRotate2d",limit:"=",angle:"="},link:function(t,n){t.$watchCollection("[value, limit, angle]",function(t){var e,r,o,i;i=t[0]||0,o=t[1]||10,e=t[2]||360,r=i*e/o,n.css({"-webkit-transform":"rotate("+r+"deg)","-moz-transform":"rotate("+r+"deg)",transform:"rotate("+r+"deg)"})})}}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.directives.upper",[]).directive("exUpper",[function(){return{require:"ngModel",link:function(t,n,e,r){var o;o=function(t){var n;return n=t?t.toUpperCase():t,n!==t&&(r.$setViewValue(n),r.$render()),n},r.$parsers.push(o),o(t[e.ngModel])}}}])}).call(n,e(1))},function(t,n,e){(function(t,n){"use strict";var e=[].slice;t.module("ngExtends.filters.arrays",[]).filter("makeArray",[function(){return function(e){return t.isArray(e)?e:n.makeArray(e)}}]).filter("range",[function(){return function(t,n,e){var r,o,i,u,s,c,l,f,a;for(null==e&&(e=1),u="number"==typeof t&&"number"==typeof n,r=u?t:t.toString().charCodeAt(0),o=u?n:n.toString().charCodeAt(0),a=[],i=s=c=r,l=o,f=r>o?-e:e;f>0?l>=s:s>=l;i=s+=f)u?a.push(i):a.push(String.fromCharCode(i));return a}}]).filter("join",[function(){return function(t,e){return n.makeArray(t).join(e)}}]).filter("combine",["$parse",function(n){return function(){var r,o,i,u;return r=arguments[0],i=2<=arguments.length?e.call(arguments,1):[],t.isArray(r)||(r=[r]),function(){var e,s,c,l,f;for(f=[],e=0,c=r.length;c>e;e++){for(u=r[e],s=0,l=i.length;l>s;s++)o=i[s],t.isFunction(o)?u=o(u):"string"==typeof o&&(u=function(){switch(o){case"=integer":return parseInt(u);case"=float":return parseFloat(u);default:return n(o)(u)}}());f.push(u)}return f}().reduce(function(t,n){return t+n})}}]).filter("limit",[function(){return function(t,e,r){var o,i;return o=(e-1)*r,i=o+r,n.makeArray(t).slice(o,i)}}]).filter("trim",[function(){return function(n){var e,r,o,i,u,s;if(t.isArray(n)){for(s=[],r=0,o=n.length;o>r;r++)e=n[r],s.push(null!=e&&"function"==typeof e.toString&&null!=(i=e.toString())&&"function"==typeof i.trim?i.trim():void 0);return s}return null!=n&&"function"==typeof n.toString&&null!=(u=n.toString())&&"function"==typeof u.trim?u.trim():void 0}}])}).call(n,e(1),e(2))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.filters.strings",[]).filter("trustAs",["$sce",function(t){return function(n,e){return t.trustAs(e,n)}}]).filter("trustAsCss",["$sce",function(t){return t.trustAsCss}]).filter("trustAsHtml",["$sce",function(t){return t.trustAsHtml}]).filter("trustAsJs",["$sce",function(t){return t.trustAsJs}]).filter("trustAsResourceUrl",["$sce",function(t){return t.trustAsResourceUrl}]).filter("trustAsUrl",["$sce",function(t){return t.trustAsUrl}]).filter("replace",[function(){return function(t,n,e,r){return n instanceof RegExp||(n=new RegExp(n,r)),(t||"").toString().replace(n,e)}}]).filter("nl2br",[function(){return function(t){return(t||"").toString().replace(/(\r\n|\n\r|\r|\n)/g,"<br/>")}}]).filter("br2nl",[function(){return function(t){return(t||"").toString().replace(/(<br>|<br\/>)/g,"\n")}}]).filter("space2nbsp",[function(){return function(t){return(t||"").toString().replace(/\s/g,"&nbsp;")}}]).filter("nbsp2space",[function(){return function(t){return(t||"").toString().replace(/&nbsp;/g," ")}}]).filter("split",[function(){return function(n,e,r){return null==n?n:n.toString().split(new RegExp(t.isArray(e)?e.join("|"):e),r)}}]).filter("cutstring",[function(){return function(t,n,e){var r;return null==n&&(n=10),null==e&&(e="..."),null==t?t:(r=t.toString(),r.length>n-e.length&&(r=r.slice(0,n)+e),r)}}]).filter("roundcutstring",[function(){return function(t,n,e,r,o){var i,u,s,c;return null==e&&(e=20),null==r&&(r="..."),null==o&&(o="..."),null==t?t:(s=t.toString(),c=(n||"").toString(),u=s.indexOf(c),-1===u?(s.length>e-o.length&&(s=s.slice(0,e)+o),s):(i=function(t,n,e,u){var s,c,l,f,a,d,p;return 0>=u||0===t.length&&0===n.length?(s=t.length>0?r:"",c=n.length>0?o:"",s+e+c):(l=u/2,1>l?i(t.slice(0,-1),n,t.slice(-1)+e,0):(a=t.slice(-l),f=n.slice(0,l),p=t.slice(0,-l),d=n.slice(l),i(p,d,a+e+f,u-a.length-f.length)))})(s.slice(0,u),s.slice(u+c.length),c,e-c.length-r.length-o.length))}}])}).call(n,e(1))},function(t,n,e){(function(t){"use strict";t.module("ngExtends.services.locationState",[]).run(["$rootScope","$window","$location",function(t,n,e){t.$on("$locationChangeSuccess",function(){return e.$$actualPath=e.path()}),t.$watch(function(){return e.path()},function(t){return e.isHistoryChanged=e.$$actualPath===t})}])}).call(n,e(1))},function(t,n,e){(function(t,n){"use strict";t.module("ngExtends.services.playRoutes",[]).provider("playRoutes",[function(){this.jsRoutes=n.Routes,this.$get=["$http",function(n){return function(e){var r,o,i;return i=function(t){return function(){var n,r,o,i;return o=t.apply(this,arguments),n=o.method.toLowerCase(),i=o.url,r={$route:o,method:n,url:i,absoluteUrl:o.absoluteURL,webSocketUrl:o.webSocketURL},r[n]=function(t){return e[n](i,t)},r}},(r=function(n,e){var o,u;for(o in e)u=e[o],t.isFunction(u)?n[o]=i(u):(o in n||(n[o]={}),r(n[o],u))})(o={},n.jsRoutes),o}}(this)]}])}).call(n,e(1),e(17))},function(t,n){(function(n){"use strict";if(!n.document)throw new Error("jQuery.extends requires a window with a document");t.exports=n}).call(n,function(){return this}())},function(t,n,e){(function(t,n,r){"use strict";e(15),t.module("ngExtends.services.retainScroll",["ngExtends.services.locationState"]).provider("retainScroll",[function(){this.target=null,this.inactive=!1,this.tracking=!1,this.positions={},this.maxTryCount=10,this.whetherScrollEvaluator=["$location",function(t){return t.isHistoryChanged}],this.isDelayedEvaluator=[function(){return!1}],this.$get=[function(){return this}]}]).run(["$rootScope","retainScroll","$location","$timeout","$injector",function(t,e,o,i,u){var s,c,l,f,a;for(s=n(e.target||r),s.on("scroll",function(){return e.tracking?e.positions[o.url()]=s.scrollTop():void 0}),a=["$routeChangeSuccess","$stateChangeSuccess"],l=0,f=a.length;f>l;l++)c=a[l],t.$on(c,function(){return e.inactive=e.tracking=!1});t.$on("$viewContentLoaded",function(t){var n,r,c,l;e.inactive||!u.invoke(e.whetherScrollEvaluator)?(console.log("move to scroll top %o",s[0]),s.scrollTop(0),e.tracking=!0):(n=!1,r=t.targetScope.$on("$destroy",function(){return n=!0,c()}),c=function(){return s.off("scroll.retainScroll-canceler"+t.targetScope.$id)},l=function(){return s.one("scroll.retainScroll-canceler"+t.targetScope.$id,function(){return n=!0,r()})},i(function(){var t,f,a;n?(console.log("Cancel scrolling %o",s[0]),e.tracking=!0):(f=e.maxTryCount,t=e.positions[o.url()]||0,(a=function(){n?(console.log("Cancel scrolling %o",s[0]),e.tracking=!0):u.invoke(e.isDelayedEvaluator)?i(a,200):(c(),s.scrollTop(t),console.log(1+e.maxTryCount-f+" try move to scroll "+s.scrollTop()+" / "+t+" %o",s[0]),s.scrollTop()===t||--f<=0?(e.tracking=!0,r()):(l(),i(a,100)))})())},100))})}])}).call(n,e(1),e(2),e(17))},function(t,n,e){(function(t){"use strict";var n;n=function(){function n(n){this.options=n,this.options=t.isFunction(this.options)?{action:this.options}:void 0,this.options=t.extend({defaults:{},preSubmit:function(t,n,e){},preReset:function(t){},submit:function(t,n,e){},reset:function(t){},action:function(t){}},this.options),this.current=t.copy(this.options.defaults)||{},this.form=t.copy(this.options.defaults)||{}}return n.prototype.isPristine=function(){return t.equals(this.current,this.form)},n.prototype.isDirty=function(){return!this.isPristine()},n.prototype.isChanged=function(){return!t.equals(this.current,this.options.defaults)},n.prototype.submit=function(n,e,r){var o,i,u,s,c,l;return("function"==typeof(o=this.options).preSubmit?o.preSubmit(n,e,r):void 0)!==!1&&(null!=e&&(s=function(){var t,n;t=e||{},n=[];for(c in t)l=t[c],n.push([c,l]);return n}().every(function(n){return function(e){var r,o;return r=e[0],o=e[1],t.equals(n.form[r],o,!0)}}(this)),t.extend(this.form,t.copy(s?r:e))),this.current=t.copy(this.form),"function"==typeof(i=this.options).submit&&i.submit(n,e,r),"function"==typeof(u=this.options).action&&u.action(n)),this},n.prototype.reset=function(n){var e,r,o;return("function"==typeof(e=this.options).preReset?e.preReset(n):void 0)!==!1&&(null!=n&&"function"==typeof n.$setPristine&&n.$setPristine(),this.current=t.copy(this.options.defaults)||{},this.form=t.copy(this.options.defaults)||{},"function"==typeof(r=this.options).reset&&r.reset(n),"function"==typeof(o=this.options).action&&o.action(n)),this},n.prototype.params=function(n,e){var r,o,i,u;t.isObject(n)&&(i=[n,!1],e=i[0],n=i[1]),o=n===!0?t.copy(this.current):t.copy(this.form=t.copy(this.current));for(r in this.options.defaults)t.isArray(o[r])&&(o[r]=o[r].filter(function(t){return!!t}));if(o=t.extend(o,t.copy(e)),t.isFunction(this.options.transform))for(r in o)u=o[r],o[r]=this.options.transform(r,u);return o},n}(),t.module("ngExtends.services.searchForm",[]).factory("searchForm",[function(){return function(t){return new n(t)}}])}).call(n,e(1))}])});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwiYW5ndWxhci1leHRlbmRzLm1pbi5qcyIsIndlYnBhY2s6L3dlYnBhY2svYm9vdHN0cmFwIGMwN2JiNDA5MTEwNTMxMzlmNDY5Iiwid2VicGFjazovLy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vL3NyYy92YXJzL2FuZ3VsYXIuanMiLCJ3ZWJwYWNrOi8vL3NyYy92YXJzL2pxdWVyeS5qcyIsIndlYnBhY2s6Ly8vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW50ZXJvcC1yZXF1aXJlLWRlZmF1bHQuanMiLCJ3ZWJwYWNrOi9leHRlcm5hbCB7XCJyb290XCI6XCJqUXVlcnlcIixcImNvbW1vbmpzXCI6XCJqcXVlcnlcIixcImNvbW1vbmpzMlwiOlwianF1ZXJ5XCIsXCJhbWRcIjpcImpxdWVyeVwifSIsIndlYnBhY2s6L2V4dGVybmFsIFwiYW5ndWxhclwiIiwid2VicGFjazovLy9zcmMvZGlyZWN0aXZlcy9jb3VudFRvLmNvZmZlZSIsIndlYnBhY2s6Ly8vc3JjL2RpcmVjdGl2ZXMvZG9tSW5pdC5jb2ZmZWUiLCJ3ZWJwYWNrOi8vL3NyYy9kaXJlY3RpdmVzL2ZvY3VzTWUuY29mZmVlIiwid2VicGFjazovLy9zcmMvZGlyZWN0aXZlcy9sb3dlci5jb2ZmZWUiLCJ3ZWJwYWNrOi8vL3NyYy9kaXJlY3RpdmVzL3JlcGVhdERvbmUuY29mZmVlIiwid2VicGFjazovLy9zcmMvZGlyZWN0aXZlcy9yb3RhdGUyZC5jb2ZmZWUiLCJ3ZWJwYWNrOi8vL3NyYy9kaXJlY3RpdmVzL3VwcGVyLmNvZmZlZSIsIndlYnBhY2s6Ly8vc3JjL2ZpbHRlcnMvYXJyYXlzLmNvZmZlZSIsIndlYnBhY2s6Ly8vc3JjL2ZpbHRlcnMvc3RyaW5ncy5jb2ZmZWUiLCJ3ZWJwYWNrOi8vL3NyYy9zZXJ2aWNlcy9sb2NhdGlvblN0YXRlLmNvZmZlZSIsIndlYnBhY2s6Ly8vc3JjL3NlcnZpY2VzL3BsYXlSb3V0ZXMuY29mZmVlIiwid2VicGFjazovLy9zcmMvdmFycy93aW5kb3cuanMiLCJ3ZWJwYWNrOi8vL3NyYy9zZXJ2aWNlcy9yZXRhaW5TY3JvbGwuY29mZmVlIiwid2VicGFjazovLy9zcmMvc2VydmljZXMvc2VhcmNoRm9ybS5jb2ZmZWUiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwicmVxdWlyZSIsImRlZmluZSIsImFtZCIsImEiLCJpIiwidGhpcyIsIl9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfNF9fIiwiX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV81X18iLCJtb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiaW5zdGFsbGVkTW9kdWxlcyIsImlkIiwibG9hZGVkIiwiY2FsbCIsIm0iLCJjIiwicCIsImFuZ3VsYXIiLCIkIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9hbmd1bGFyIiwiX2FuZ3VsYXIyIiwiRXJyb3IiLCJfanF1ZXJ5IiwiX2pxdWVyeTIiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRpcmVjdGl2ZSIsIiR0aW1lb3V0IiwicmVwbGFjZSIsInNjb3BlIiwibGluayIsImVsZW1lbnQiLCJhdHRycyIsImNhbGN1bGF0ZSIsImNvdW50VG8iLCJlbGVtIiwiaW5jcmVtZW50IiwibnVtIiwicmVmcmVzaEludGVydmFsIiwic3RhcnQiLCJzdGVwIiwic3RlcHMiLCJ0aWNrIiwiZHVyYXRpb24iLCJ0aW1vdXRJZCIsInBhcnNlSW50IiwiZXhDb3VudFRvIiwidmFsdWUiLCJwYXJzZUZsb2F0IiwiTWF0aCIsImNlaWwiLCJjYW5jZWwiLCJ0ZXh0Q29udGVudCIsInJvdW5kIiwiJG9ic2VydmUiLCJ2YWwiLCJyZXN0cmljdCIsImJhc2UiLCIkZXZhbCIsInRyaWdnZXIiLCIkd2F0Y2giLCJuYW1lIiwibW9kZWxDdHJsIiwidG9Mb3dlciIsImlucHV0VmFsdWUiLCJsb3dlcmVkIiwidG9Mb3dlckNhc2UiLCIkc2V0Vmlld1ZhbHVlIiwiJHJlbmRlciIsIiRwYXJzZXJzIiwicHVzaCIsIm5nTW9kZWwiLCJuZ1JlcGVhdCIsIm5nUmVwZWF0U3RhcnQiLCIkbGFzdCIsImxpbWl0IiwiYW5nbGUiLCIkd2F0Y2hDb2xsZWN0aW9uIiwidmFsdWVzIiwiZGVncmVlIiwiY3NzIiwiLXdlYmtpdC10cmFuc2Zvcm0iLCItbW96LXRyYW5zZm9ybSIsInRyYW5zZm9ybSIsInRvVXBwZXIiLCJ1cHBlcmVkIiwidG9VcHBlckNhc2UiLCJzbGljZSIsImZpbHRlciIsImlucHV0IiwiaXNBcnJheSIsIm1ha2VBcnJheSIsImZyb20iLCJ0byIsImJlZ2luIiwiZW5kIiwiaXNOdW1iZXIiLCJqIiwicmVmIiwicmVmMSIsInJlZjIiLCJyZXN1bHRzIiwidG9TdHJpbmciLCJjaGFyQ29kZUF0IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwic2VwIiwiam9pbiIsIiRwYXJzZSIsInQiLCJ0cmFuc2Zvcm1lcnMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJrIiwibGVuIiwibGVuMSIsImlzRnVuY3Rpb24iLCJyZWR1Y2UiLCJ2IiwicGFnZSIsIml0ZW1zUGVyUGFnZSIsInRyaW0iLCIkc2NlIiwidHlwZSIsInRydXN0QXMiLCJ0cnVzdEFzQ3NzIiwidHJ1c3RBc0h0bWwiLCJ0cnVzdEFzSnMiLCJ0cnVzdEFzUmVzb3VyY2VVcmwiLCJ0cnVzdEFzVXJsIiwic2VhcmNoIiwicmVwbGFjZW1lbnQiLCJvcHRpb25zIiwiUmVnRXhwIiwic2VwYXJhdG9ycyIsInNwbGl0IiwibWF4TGVuZ3RoIiwic3VmZml4IiwiaW5wdXRTdHJpbmciLCJwcmVmaXgiLCJkb0N1dCIsInNlYXJjaFN0cmluZyIsImluZGV4T2YiLCJiZWZvcmUiLCJhZnRlciIsInN0cmluZyIsInJlc3RMZW5ndGgiLCJlbXB0eU9yUHJlZml4IiwiZW1wdHlPclN1ZmZpeCIsImhhbGZMZW5ndGgiLCJwaWVjZU9mQWZ0ZXIiLCJwaWVjZU9mQmVmb3JlIiwicmVzdE9mQWZ0ZXIiLCJyZXN0T2ZCZWZvcmUiLCJydW4iLCIkcm9vdFNjb3BlIiwiJHdpbmRvdyIsIiRsb2NhdGlvbiIsIiRvbiIsIiQkYWN0dWFsUGF0aCIsInBhdGgiLCJuZXdMb2NhdGlvbiIsImlzSGlzdG9yeUNoYW5nZWQiLCJ3aW5kb3ciLCJwcm92aWRlciIsImpzUm91dGVzIiwiUm91dGVzIiwiJGdldCIsIl90aGlzIiwiJGh0dHAiLCJhZGRSb3V0ZXMiLCJwbGF5Um91dGVzIiwid3JhcEh0dHAiLCJmbiIsImh0dHBNZXRob2QiLCJyZXMiLCJyb3V0ZU9iamVjdCIsInVybCIsImFwcGx5IiwibWV0aG9kIiwiJHJvdXRlIiwiYWJzb2x1dGVVcmwiLCJhYnNvbHV0ZVVSTCIsIndlYlNvY2tldFVybCIsIndlYlNvY2tldFVSTCIsInBsYXlSb3V0ZXNPYmplY3QiLCJqc1JvdXRlc09iamVjdCIsImtleSIsImdsb2JhbCIsImRvY3VtZW50IiwidGFyZ2V0IiwiaW5hY3RpdmUiLCJ0cmFja2luZyIsInBvc2l0aW9ucyIsIm1heFRyeUNvdW50Iiwid2hldGhlclNjcm9sbEV2YWx1YXRvciIsImlzRGVsYXllZEV2YWx1YXRvciIsInJldGFpblNjcm9sbCIsIiRpbmplY3RvciIsIiR0YXJnZXQiLCJldmVudCIsIm9uIiwic2Nyb2xsVG9wIiwiZSIsImlzQ2FuY2VsIiwib2ZmU2NvcGVEZXN0cm95Iiwib2ZmU2Nyb2xsQ2FuY2VsZXIiLCJvblNjcm9sbENhbmNlbGVyIiwiaW52b2tlIiwiY29uc29sZSIsImxvZyIsInRhcmdldFNjb3BlIiwib2ZmIiwiJGlkIiwib25lIiwidHJ5Q291bnQiLCJ0cnlTY3JvbGwiLCJTZWFyY2hGb3JtIiwib3B0aW9uczEiLCJhY3Rpb24iLCJleHRlbmQiLCJkZWZhdWx0cyIsInByZVN1Ym1pdCIsImZvcm0iLCJmaWx0ZXJzIiwidW5maWx0ZXJzIiwicHJlUmVzZXQiLCJzdWJtaXQiLCJyZXNldCIsImN1cnJlbnQiLCJjb3B5IiwicHJvdG90eXBlIiwiaXNQcmlzdGluZSIsImVxdWFscyIsImlzRGlydHkiLCJpc0NoYW5nZWQiLCJiYXNlMSIsImJhc2UyIiwiaXNGaWx0ZXJlZCIsImV2ZXJ5Iiwia2V5V2l0aFZhbHVlIiwiJHNldFByaXN0aW5lIiwicGFyYW1zIiwicmVmcmVzaCIsImlzT2JqZWN0Il0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxFQUFBQyxHQUNBLEdBQUEsZ0JBQUFDLFVBQUEsZ0JBQUFDLFFBQ0FBLE9BQUFELFFBQUFELEVBQUFHLFFBQUEsVUFBQUEsUUFBQSxnQkFDQSxJQUFBLGtCQUFBQyxTQUFBQSxPQUFBQyxJQUNBRCxRQUFBLFNBQUEsV0FBQUosT0FDQSxDQUNBLEdBQUFNLEdBQUEsZ0JBQUFMLFNBQUFELEVBQUFHLFFBQUEsVUFBQUEsUUFBQSxZQUFBSCxFQUFBRCxFQUFBLE9BQUFBLEVBQUEsUUFDQSxLQUFBLEdBQUFRLEtBQUFELElBQUEsZ0JBQUFMLFNBQUFBLFFBQUFGLEdBQUFRLEdBQUFELEVBQUFDLEtBRUNDLEtBQUEsU0FBQUMsRUFBQUMsR0FDRCxNQ0FnQixVQUFVQyxHQ04xQixRQUFBQyxHQUFBQyxHQUdBLEdBQUFDLEVBQUFELEdBQ0EsTUFBQUMsR0FBQUQsR0FBQVosT0FHQSxJQUFBQyxHQUFBWSxFQUFBRCxJQUNBWixXQUNBYyxHQUFBRixFQUNBRyxRQUFBLEVBVUEsT0FOQUwsR0FBQUUsR0FBQUksS0FBQWYsRUFBQUQsUUFBQUMsRUFBQUEsRUFBQUQsUUFBQVcsR0FHQVYsRUFBQWMsUUFBQSxFQUdBZCxFQUFBRCxRQXZCQSxHQUFBYSxLQXFDQSxPQVRBRixHQUFBTSxFQUFBUCxFQUdBQyxFQUFBTyxFQUFBTCxFQUdBRixFQUFBUSxFQUFBLEdBR0FSLEVBQUEsS0RnQk0sU0FBU1YsRUFBUUQsRUFBU1csSUV0RGhDLFNBQUFTLEdBQUEsWUYwRENULEdFeERNLEdGMEROQSxFRXpETSxHRjJETkEsRUUxRE0sR0Y0RE5BLEVFM0RNLEdGNkROQSxFRTVETSxJRjhETkEsRUU3RE0sSUYrRE5BLEVFOURNLElGZ0VOQSxFRS9ETSxJRmlFTkEsRUVoRU0sSUZrRU5BLEVF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Qm5CLE1xQnozQnNCLFVBQUMwSSxHckIwM0JyQixNcUIxM0JxQyxJQUFBcUYsR0FBV3JGLFNyQiszQnpCekgsS0FBS2hCLEVBQVNXLEVBQW9CIiwiZmlsZSI6ImFuZ3VsYXItZXh0ZW5kcy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoXCJqcXVlcnlcIiksIHJlcXVpcmUoXCJhbmd1bGFyXCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcImpxdWVyeVwiLCBcImFuZ3VsYXJcIl0sIGZhY3RvcnkpO1xuXHRlbHNlIHtcblx0XHR2YXIgYSA9IHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyA/IGZhY3RvcnkocmVxdWlyZShcImpxdWVyeVwiKSwgcmVxdWlyZShcImFuZ3VsYXJcIikpIDogZmFjdG9yeShyb290W1wialF1ZXJ5XCJdLCByb290W1wiYW5ndWxhclwiXSk7XG5cdFx0Zm9yKHZhciBpIGluIGEpICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgPyBleHBvcnRzIDogcm9vdClbaV0gPSBhW2ldO1xuXHR9XG59KSh0aGlzLCBmdW5jdGlvbihfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzRfXywgX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV81X18pIHtcbnJldHVybiBcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb25cbiAqKi8iLG51bGwsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjay9ib290c3RyYXAgYzA3YmI0MDkxMTA1MzEzOWY0NjlcbiAqKi8iLCIndXNlIHN0cmljdCc7XG5cbmltcG9ydCAnLi9kaXJlY3RpdmVzL2NvdW50VG8uY29mZmVlJ1xuaW1wb3J0ICcuL2RpcmVjdGl2ZXMvZG9tSW5pdC5jb2ZmZWUnXG5pbXBvcnQgJy4vZGlyZWN0aXZlcy9mb2N1c01lLmNvZmZlZSdcbmltcG9ydCAnLi9kaXJlY3RpdmVzL2xvd2VyLmNvZmZlZSdcbmltcG9ydCAnLi9kaXJlY3RpdmVzL3JlcGVhdERvbmUuY29mZmVlJ1xuaW1wb3J0ICcuL2RpcmVjdGl2ZXMvcm90YXRlMmQuY29mZmVlJ1xuaW1wb3J0ICcuL2RpcmVjdGl2ZXMvdXBwZXIuY29mZmVlJ1xuaW1wb3J0ICcuL2ZpbHRlcnMvYXJyYXlzLmNvZmZlZSdcbmltcG9ydCAnLi9maWx0ZXJzL3N0cmluZ3MuY29mZmVlJ1xuaW1wb3J0ICcuL3NlcnZpY2VzL2xvY2F0aW9uU3RhdGUuY29mZmVlJ1xuaW1wb3J0ICcuL3NlcnZpY2VzL3BsYXlSb3V0ZXMuY29mZmVlJ1xuaW1wb3J0ICcuL3NlcnZpY2VzL3JldGFpblNjcm9sbC5jb2ZmZWUnXG5pbXBvcnQgJy4vc2VydmljZXMvc2VhcmNoRm9ybS5jb2ZmZWUnXG5cbmFuZ3VsYXIubW9kdWxlKCduZ0V4dGVuZHMuZGlyZWN0aXZlcycsIFtcbiAgICAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMuY291bnRUbycsXG4gICAgJ25nRXh0ZW5kcy5kaXJlY3RpdmVzLmRvbUluaXQnLFxuICAgICduZ0V4dGVuZHMuZGlyZWN0aXZlcy5mb2N1c01lJyxcbiAgICAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMubG93ZXInLFxuICAgICduZ0V4dGVuZHMuZGlyZWN0aXZlcy5yZXBlYXREb25lJyxcbiAgICAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMucm90YXRlMmQnLFxuICAgICduZ0V4dGVuZHMuZGlyZWN0aXZlcy51cHBlcidcbl0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnbmdFeHRlbmRzLmZpbHRlcnMnLCBbXG4gICAgJ25nRXh0ZW5kcy5maWx0ZXJzLmFycmF5cycsXG4gICAgJ25nRXh0ZW5kcy5maWx0ZXJzLnN0cmluZ3MnXG5dKTtcblxuYW5ndWxhci5tb2R1bGUoJ25nRXh0ZW5kcy5zZXJ2aWNlcycsIFtcbiAgICAnbmdFeHRlbmRzLnNlcnZpY2VzLmxvY2F0aW9uU3RhdGUnLFxuICAgICduZ0V4dGVuZHMuc2VydmljZXMucGxheVJvdXRlcycsXG4gICAgJ25nRXh0ZW5kcy5zZXJ2aWNlcy5yZXRhaW5TY3JvbGwnLFxuICAgICduZ0V4dGVuZHMuc2VydmljZXMuc2VhcmNoRm9ybSdcbl0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnbmdFeHRlbmRzJywgW1xuICAgICduZ0V4dGVuZHMuZGlyZWN0aXZlcycsXG4gICAgJ25nRXh0ZW5kcy5maWx0ZXJzJyxcbiAgICAnbmdFeHRlbmRzLnNlcnZpY2VzJ1xuXSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pbmRleC5qc1xuICoqLyIsIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGFuZ3VsYXIgZnJvbSAnYW5ndWxhcidcblxuaWYgKCEkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQW5ndWxhci5leHRlbmRzIHJlcXVpcmVzIGEgQW5ndWxhckpTXCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFuZ3VsYXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy92YXJzL2FuZ3VsYXIuanNcbiAqKi8iLCIndXNlIHN0cmljdCc7XG5cbmltcG9ydCAkIGZyb20gJ2pxdWVyeSdcblxuaWYgKCEkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQW5ndWxhci5leHRlbmRzIHJlcXVpcmVzIGEgalF1ZXJ5XCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9ICQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy92YXJzL2pxdWVyeS5qc1xuICoqLyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59O1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbnRlcm9wLXJlcXVpcmUtZGVmYXVsdC5qc1xuICoqIG1vZHVsZSBpZCA9IDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV80X187XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCB7XCJyb290XCI6XCJqUXVlcnlcIixcImNvbW1vbmpzXCI6XCJqcXVlcnlcIixcImNvbW1vbmpzMlwiOlwianF1ZXJ5XCIsXCJhbWRcIjpcImpxdWVyeVwifVxuICoqIG1vZHVsZSBpZCA9IDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV81X187XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImFuZ3VsYXJcIlxuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMuY291bnRUbycsIFtdXG5cbi5kaXJlY3RpdmUgJ2V4Q291bnRUbycsIFsnJHRpbWVvdXQnLCAoJHRpbWVvdXQpIC0+XG4gIHJlcGxhY2U6IGZhbHNlXG4gIHNjb3BlOiB0cnVlXG4gIGxpbms6IChzY29wZSwgZWxlbWVudCwgYXR0cnMpIC0+XG4gICAgZWxlbSA9IGVsZW1lbnRbMF1cbiAgICBudW0gPSBudWxsXG4gICAgcmVmcmVzaEludGVydmFsID0gbnVsbFxuICAgIHN0ZXBzID0gbnVsbFxuICAgIHN0ZXAgPSBudWxsXG4gICAgY291bnRUbyA9IG51bGxcbiAgICBpbmNyZW1lbnQgPSBudWxsXG5cbiAgICBjYWxjdWxhdGUgPSAtPlxuICAgICAgcmVmcmVzaEludGVydmFsID0gMzBcbiAgICAgIHN0ZXAgPSAwXG4gICAgICBzY29wZS50aW1vdXRJZCA9IG51bGxcbiAgICAgIGNvdW50VG8gPSBwYXJzZUludChhdHRycy5leENvdW50VG8pIHx8IDBcbiAgICAgIHNjb3BlLnZhbHVlID0gcGFyc2VJbnQoYXR0cnMudmFsdWUsIDEwKSB8fCAwXG4gICAgICBkdXJhdGlvbiA9IChwYXJzZUZsb2F0KGF0dHJzLmR1cmF0aW9uKSAqIDEwMDApIHx8IDBcblxuICAgICAgc3RlcHMgPSBNYXRoLmNlaWwoZHVyYXRpb24gLyByZWZyZXNoSW50ZXJ2YWwpXG4gICAgICBpbmNyZW1lbnQgPSAoY291bnRUbyAtIHNjb3BlLnZhbHVlKSAvIHN0ZXBzXG4gICAgICBudW0gPSBzY29wZS52YWx1ZVxuICAgICAgcmV0dXJuXG5cbiAgICB0aWNrID0gLT5cbiAgICAgIHNjb3BlLnRpbW91dElkID0gJHRpbWVvdXQoLT5cbiAgICAgICAgbnVtICs9IGluY3JlbWVudFxuICAgICAgICBzdGVwKytcbiAgICAgICAgaWYgc3RlcCA+PSBzdGVwc1xuICAgICAgICAgICR0aW1lb3V0LmNhbmNlbChzY29wZS50aW1vdXRJZClcbiAgICAgICAgICBudW0gPSBjb3VudFRvXG4gICAgICAgICAgZWxlbS50ZXh0Q29udGVudCA9IGNvdW50VG9cbiAgICAgICAgZWxzZVxuICAgICAgICAgIGVsZW0udGV4dENvbnRlbnQgPSBNYXRoLnJvdW5kKG51bSlcbiAgICAgICAgICB0aWNrKClcbiAgICAgICwgcmVmcmVzaEludGVydmFsKVxuICAgICAgcmV0dXJuXG5cbiAgICBzdGFydCA9IC0+XG4gICAgICAkdGltZW91dC5jYW5jZWwoc2NvcGUudGltb3V0SWQpICBpZiBzY29wZS50aW1vdXRJZD9cbiAgICAgIGNhbGN1bGF0ZSgpXG4gICAgICB0aWNrKClcbiAgICAgIHJldHVyblxuXG4gICAgYXR0cnMuJG9ic2VydmUgJ2V4Q291bnRUbycsICh2YWwpIC0+IHN0YXJ0KCkgIGlmIHZhbD9cbiAgICBhdHRycy4kb2JzZXJ2ZSAndmFsdWUnLCAtPiBzdGFydCgpXG4gICAgcmV0dXJuXG5dXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvZGlyZWN0aXZlcy9jb3VudFRvLmNvZmZlZVxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMuZG9tSW5pdCcsIFtdXG5cbi5kaXJlY3RpdmUgJ2V4RG9tSW5pdCcsIFstPlxuICByZXN0cmljdDogJ0EnLFxuICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSAtPlxuICAgIGF0dHJzLiRvYnNlcnZlICdleERvbUluaXQnLCAodmFsdWUpIC0+IHNjb3BlLiRldmFsKHZhbHVlKT8oZWxlbWVudClcbiAgICByZXR1cm5cbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9kaXJlY3RpdmVzL2RvbUluaXQuY29mZmVlXG4gKiovIiwiJ3VzZSBzdHJpY3QnXG5cbmFuZ3VsYXIubW9kdWxlICduZ0V4dGVuZHMuZGlyZWN0aXZlcy5mb2N1c01lJywgW11cblxuLmRpcmVjdGl2ZSAnZXhGb2N1c01lJywgWy0+XG4gIHNjb3BlOlxuICAgIHRyaWdnZXI6ICc9ZXhGb2N1c01lJ1xuICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQpIC0+XG4gICAgc2NvcGUuJHdhdGNoICd0cmlnZ2VyJywgKHZhbHVlKSAtPlxuICAgICAgaWYgdHlwZW9mIHZhbHVlIGlzICdib29sZWFuJ1xuICAgICAgICBlbGVtZW50W2lmIHZhbHVlIHRoZW4gJ2ZvY3VzJyBlbHNlICdibHVyJ10/KClcbiAgICAgICAgc2NvcGUudHJpZ2dlciA9IG51bGxcbiAgICAgIHJldHVyblxuICAgIHJldHVyblxuXVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2RpcmVjdGl2ZXMvZm9jdXNNZS5jb2ZmZWVcbiAqKi8iLCIndXNlIHN0cmljdCdcblxuYW5ndWxhci5tb2R1bGUgJ25nRXh0ZW5kcy5kaXJlY3RpdmVzLmxvd2VyJywgW11cblxuLmRpcmVjdGl2ZSAnZXhMb3dlcicsIFstPlxuICByZXF1aXJlOiAnbmdNb2RlbCdcbiAgbGluazogKHNjb3BlLCBlbGVtZW50LCBhdHRycywgbW9kZWxDdHJsKSAtPlxuICAgIHRvTG93ZXIgPSAoaW5wdXRWYWx1ZSkgLT5cbiAgICAgIGxvd2VyZWQgPSBpZiBpbnB1dFZhbHVlIHRoZW4gaW5wdXRWYWx1ZS50b0xvd2VyQ2FzZSgpIGVsc2UgaW5wdXRWYWx1ZVxuICAgICAgdW5sZXNzIGxvd2VyZWQgaXMgaW5wdXRWYWx1ZVxuICAgICAgICBtb2RlbEN0cmwuJHNldFZpZXdWYWx1ZSBsb3dlcmVkXG4gICAgICAgIG1vZGVsQ3RybC4kcmVuZGVyKClcbiAgICAgIGxvd2VyZWRcblxuICAgIG1vZGVsQ3RybC4kcGFyc2Vycy5wdXNoIHRvTG93ZXJcbiAgICB0b0xvd2VyIHNjb3BlW2F0dHJzLm5nTW9kZWxdXG4gICAgcmV0dXJuXG5dXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvZGlyZWN0aXZlcy9sb3dlci5jb2ZmZWVcbiAqKi8iLCIndXNlIHN0cmljdCdcblxuYW5ndWxhci5tb2R1bGUgJ25nRXh0ZW5kcy5kaXJlY3RpdmVzLnJlcGVhdERvbmUnLCBbXVxuXG4uZGlyZWN0aXZlICdleFJlcGVhdERvbmUnLCBbLT5cbiAgcmVzdHJpY3Q6ICdBJyxcbiAgbGluazogKHNjb3BlLCBlbGVtZW50LCBhdHRycykgLT5cbiAgICBpZiAoYXR0cnMubmdSZXBlYXQ/IG9yIGF0dHJzLm5nUmVwZWF0U3RhcnQ/KSBhbmQgc2NvcGUuJGxhc3RcbiAgICAgIGF0dHJzLiRvYnNlcnZlICdleFJlcGVhdERvbmUnLCAodmFsdWUpIC0+IHNjb3BlLiRldmFsKHZhbHVlKT8oZWxlbWVudClcbiAgICByZXR1cm5cbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9kaXJlY3RpdmVzL3JlcGVhdERvbmUuY29mZmVlXG4gKiovIiwiJ3VzZSBzdHJpY3QnXG5cbmFuZ3VsYXIubW9kdWxlICduZ0V4dGVuZHMuZGlyZWN0aXZlcy5yb3RhdGUyZCcsIFtdXG5cbi5kaXJlY3RpdmUgJ2V4Um90YXRlMmQnLCBbLT5cbiAgc2NvcGU6XG4gICAgdmFsdWU6ICc9ZXhSb3RhdGUyZCdcbiAgICBsaW1pdDogJz0nXG4gICAgYW5nbGU6ICc9J1xuICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQpIC0+XG4gICAgc2NvcGUuJHdhdGNoQ29sbGVjdGlvbiAnW3ZhbHVlLCBsaW1pdCwgYW5nbGVdJywgKHZhbHVlcykgLT5cbiAgICAgIHZhbHVlID0gdmFsdWVzWzBdIG9yIDBcbiAgICAgIGxpbWl0ID0gdmFsdWVzWzFdIG9yIDEwXG4gICAgICBhbmdsZSA9IHZhbHVlc1syXSBvciAzNjBcbiAgICAgIGRlZ3JlZSA9IHZhbHVlICogYW5nbGUgLyBsaW1pdFxuICAgICAgZWxlbWVudC5jc3NcbiAgICAgICAgJy13ZWJraXQtdHJhbnNmb3JtJzogJ3JvdGF0ZSgnICsgZGVncmVlICsgJ2RlZyknXG4gICAgICAgICctbW96LXRyYW5zZm9ybSc6ICdyb3RhdGUoJyArIGRlZ3JlZSArICdkZWcpJ1xuICAgICAgICAndHJhbnNmb3JtJzogJ3JvdGF0ZSgnICsgZGVncmVlICsgJ2RlZyknXG4gICAgICByZXR1cm5cbiAgICByZXR1cm5cbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9kaXJlY3RpdmVzL3JvdGF0ZTJkLmNvZmZlZVxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLmRpcmVjdGl2ZXMudXBwZXInLCBbXVxuXG4uZGlyZWN0aXZlICdleFVwcGVyJywgWy0+XG4gIHJlcXVpcmU6ICduZ01vZGVsJ1xuICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBtb2RlbEN0cmwpIC0+XG4gICAgdG9VcHBlciA9IChpbnB1dFZhbHVlKSAtPlxuICAgICAgdXBwZXJlZCA9IGlmIGlucHV0VmFsdWUgdGhlbiBpbnB1dFZhbHVlLnRvVXBwZXJDYXNlKCkgZWxzZSBpbnB1dFZhbHVlXG4gICAgICB1bmxlc3MgdXBwZXJlZCBpcyBpbnB1dFZhbHVlXG4gICAgICAgIG1vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlIHVwcGVyZWRcbiAgICAgICAgbW9kZWxDdHJsLiRyZW5kZXIoKVxuICAgICAgdXBwZXJlZFxuXG4gICAgbW9kZWxDdHJsLiRwYXJzZXJzLnB1c2ggdG9VcHBlclxuICAgIHRvVXBwZXIgc2NvcGVbYXR0cnMubmdNb2RlbF1cbiAgICByZXR1cm5cbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9kaXJlY3RpdmVzL3VwcGVyLmNvZmZlZVxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLmZpbHRlcnMuYXJyYXlzJywgW11cblxuLmZpbHRlciAnbWFrZUFycmF5JywgWy0+IChpbnB1dCkgLT4gaWYgYW5ndWxhci5pc0FycmF5IGlucHV0IHRoZW4gaW5wdXQgZWxzZSAkLm1ha2VBcnJheShpbnB1dCldXG5cbi5maWx0ZXIgJ3JhbmdlJywgWy0+IChmcm9tLCB0bywgc3RlcCA9IDEpIC0+XG4gIGlzTnVtYmVyID0gdHlwZW9mIGZyb20gaXMgJ251bWJlcicgYW5kIHR5cGVvZiB0byBpcyAnbnVtYmVyJ1xuICBiZWdpbiA9IGlmIGlzTnVtYmVyIHRoZW4gZnJvbSBlbHNlIGZyb20udG9TdHJpbmcoKS5jaGFyQ29kZUF0KDApXG4gIGVuZCA9IGlmIGlzTnVtYmVyIHRoZW4gdG8gZWxzZSB0by50b1N0cmluZygpLmNoYXJDb2RlQXQoMClcbiAgZm9yIGkgaW4gW2JlZ2luLi5lbmRdIGJ5IChpZiBiZWdpbiA+IGVuZCB0aGVuIC1zdGVwIGVsc2Ugc3RlcClcbiAgICBpZiBpc051bWJlciB0aGVuIGkgZWxzZSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXG5dXG5cbi5maWx0ZXIgJ2pvaW4nLCBbLT4gKGlucHV0LCBzZXApIC0+ICQubWFrZUFycmF5KGlucHV0KS5qb2luKHNlcCldXG5cbi5maWx0ZXIgJ2NvbWJpbmUnLCBbJyRwYXJzZScsICgkcGFyc2UpIC0+IChpbnB1dCwgdHJhbnNmb3JtZXJzLi4uKSAtPlxuICBpbnB1dCA9IFtpbnB1dF0gIHVubGVzcyBhbmd1bGFyLmlzQXJyYXkgaW5wdXRcbiAgKGZvciB2YWx1ZSBpbiBpbnB1dFxuICAgIGZvciB0IGluIHRyYW5zZm9ybWVyc1xuICAgICAgaWYgYW5ndWxhci5pc0Z1bmN0aW9uIHRcbiAgICAgICAgdmFsdWUgPSB0KHZhbHVlKVxuICAgICAgZWxzZSBpZiB0eXBlb2YgdCBpcyAnc3RyaW5nJ1xuICAgICAgICB2YWx1ZSA9IHN3aXRjaCB0XG4gICAgICAgICAgd2hlbiAnPWludGVnZXInIHRoZW4gcGFyc2VJbnQodmFsdWUpXG4gICAgICAgICAgd2hlbiAnPWZsb2F0JyAgIHRoZW4gcGFyc2VGbG9hdCh2YWx1ZSlcbiAgICAgICAgICBlbHNlICRwYXJzZSh0KSh2YWx1ZSlcbiAgICB2YWx1ZVxuICApLnJlZHVjZSAodCwgdikgLT4gdCArIHZcbl1cblxuLmZpbHRlciAnbGltaXQnLCBbLT4gKGlucHV0LCBwYWdlLCBpdGVtc1BlclBhZ2UpIC0+XG4gIGZyb20gPSAocGFnZSAtIDEpICogaXRlbXNQZXJQYWdlXG4gIHRvID0gZnJvbSArIGl0ZW1zUGVyUGFnZVxuICAkLm1ha2VBcnJheShpbnB1dClbZnJvbS4uLnRvXVxuXVxuXG4uZmlsdGVyICd0cmltJywgWy0+IChpbnB1dCkgLT5cbiAgaWYgYW5ndWxhci5pc0FycmF5IGlucHV0XG4gICAgYT8udG9TdHJpbmc/KCk/LnRyaW0/KCkgIGZvciBhIGluIGlucHV0XG4gIGVsc2VcbiAgICBpbnB1dD8udG9TdHJpbmc/KCk/LnRyaW0/KClcbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9maWx0ZXJzL2FycmF5cy5jb2ZmZWVcbiAqKi8iLCIndXNlIHN0cmljdCdcblxuYW5ndWxhci5tb2R1bGUgJ25nRXh0ZW5kcy5maWx0ZXJzLnN0cmluZ3MnLCBbXVxuXG4uZmlsdGVyICd0cnVzdEFzJywgWyckc2NlJywgKCRzY2UpIC0+IChpbnB1dCwgdHlwZSkgLT4gJHNjZS50cnVzdEFzKHR5cGUsIGlucHV0KV1cbi5maWx0ZXIgJ3RydXN0QXNDc3MnLCBbJyRzY2UnLCAoJHNjZSkgLT4gJHNjZS50cnVzdEFzQ3NzXVxuLmZpbHRlciAndHJ1c3RBc0h0bWwnLCBbJyRzY2UnLCAoJHNjZSkgLT4gJHNjZS50cnVzdEFzSHRtbF1cbi5maWx0ZXIgJ3RydXN0QXNKcycsIFsnJHNjZScsICgkc2NlKSAtPiAkc2NlLnRydXN0QXNKc11cbi5maWx0ZXIgJ3RydXN0QXNSZXNvdXJjZVVybCcsIFsnJHNjZScsICgkc2NlKSAtPiAkc2NlLnRydXN0QXNSZXNvdXJjZVVybF1cbi5maWx0ZXIgJ3RydXN0QXNVcmwnLCBbJyRzY2UnLCAoJHNjZSkgLT4gJHNjZS50cnVzdEFzVXJsXVxuXG4uZmlsdGVyICdyZXBsYWNlJywgWy0+IChpbnB1dCwgc2VhcmNoLCByZXBsYWNlbWVudCwgb3B0aW9ucykgLT5cbiAgc2VhcmNoID0gbmV3IFJlZ0V4cChzZWFyY2gsIG9wdGlvbnMpICB1bmxlc3Mgc2VhcmNoIGluc3RhbmNlb2YgUmVnRXhwXG4gIChpbnB1dCBvciAnJykudG9TdHJpbmcoKS5yZXBsYWNlKHNlYXJjaCwgcmVwbGFjZW1lbnQpXG5dXG5cbi5maWx0ZXIgJ25sMmJyJywgWy0+IChpbnB1dCkgLT4gKGlucHV0IG9yICcnKS50b1N0cmluZygpLnJlcGxhY2UoLyhcXHJcXG58XFxuXFxyfFxccnxcXG4pL2csICc8YnIvPicpXVxuXG4uZmlsdGVyICdicjJubCcsIFstPiAoaW5wdXQpIC0+IChpbnB1dCBvciAnJykudG9TdHJpbmcoKS5yZXBsYWNlKC8oPGJyPnw8YnJcXC8+KS9nLCAnXFxuJyldXG5cbi5maWx0ZXIgJ3NwYWNlMm5ic3AnLCBbLT4gKGlucHV0KSAtPiAoaW5wdXQgb3IgJycpLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxzL2csICcmbmJzcDsnKV1cblxuLmZpbHRlciAnbmJzcDJzcGFjZScsIFstPiAoaW5wdXQpIC0+IChpbnB1dCBvciAnJykudG9TdHJpbmcoKS5yZXBsYWNlKC8mbmJzcDsvZywgJyAnKV1cblxuLmZpbHRlciAnc3BsaXQnLCBbLT4gKGlucHV0LCBzZXBhcmF0b3JzLCBsaW1pdCkgLT5cbiAgdW5sZXNzIGlucHV0PyB0aGVuIGlucHV0XG4gIGVsc2UgaW5wdXQudG9TdHJpbmcoKS5zcGxpdChuZXcgUmVnRXhwKFxuICAgIGlmIGFuZ3VsYXIuaXNBcnJheSBzZXBhcmF0b3JzIHRoZW4gc2VwYXJhdG9ycy5qb2luKCd8JykgZWxzZSBzZXBhcmF0b3JzXG4gICksIGxpbWl0KVxuXVxuXG4uZmlsdGVyICdjdXRzdHJpbmcnLCBbLT4gKGlucHV0LCBtYXhMZW5ndGggPSAxMCwgc3VmZml4ID0gJy4uLicpIC0+XG4gIHVubGVzcyBpbnB1dD8gdGhlbiBpbnB1dFxuICBlbHNlXG4gICAgaW5wdXRTdHJpbmcgPSBpbnB1dC50b1N0cmluZygpXG4gICAgaW5wdXRTdHJpbmcgPSBpbnB1dFN0cmluZ1swLi4ubWF4TGVuZ3RoXSArIHN1ZmZpeCAgaWYgaW5wdXRTdHJpbmcubGVuZ3RoID4gbWF4TGVuZ3RoIC0gc3VmZml4Lmxlbmd0aFxuICAgIGlucHV0U3RyaW5nXG5dXG5cbi5maWx0ZXIgJ3JvdW5kY3V0c3RyaW5nJywgWy0+IChpbnB1dCwgc2VhcmNoLCBtYXhMZW5ndGggPSAyMCwgcHJlZml4ID0gJy4uLicsIHN1ZmZpeCA9ICcuLi4nKSAtPlxuICB1bmxlc3MgaW5wdXQ/IHRoZW4gaW5wdXRcbiAgZWxzZVxuICAgIGlucHV0U3RyaW5nID0gaW5wdXQudG9TdHJpbmcoKVxuICAgIHNlYXJjaFN0cmluZyA9IChzZWFyY2ggb3IgJycpLnRvU3RyaW5nKClcbiAgICBpID0gaW5wdXRTdHJpbmcuaW5kZXhPZihzZWFyY2hTdHJpbmcpXG4gICAgaWYgaSBpcyAtMVxuICAgICAgaW5wdXRTdHJpbmcgPSBpbnB1dFN0cmluZ1swLi4ubWF4TGVuZ3RoXSArIHN1ZmZpeCAgaWYgaW5wdXRTdHJpbmcubGVuZ3RoID4gbWF4TGVuZ3RoIC0gc3VmZml4Lmxlbmd0aFxuICAgICAgaW5wdXRTdHJpbmdcbiAgICBlbHNlXG4gICAgICAoZG9DdXQgPSAoYmVmb3JlLCBhZnRlciwgc3RyaW5nLCByZXN0TGVuZ3RoKSAtPlxuICAgICAgICBpZiByZXN0TGVuZ3RoIDw9IDAgb3IgYmVmb3JlLmxlbmd0aCBpcyAwIGFuZCBhZnRlci5sZW5ndGggaXMgMFxuICAgICAgICAgIGVtcHR5T3JQcmVmaXggPSBpZiBiZWZvcmUubGVuZ3RoID4gMCB0aGVuIHByZWZpeCBlbHNlICcnXG4gICAgICAgICAgZW1wdHlPclN1ZmZpeCA9IGlmIGFmdGVyLmxlbmd0aCA+IDAgdGhlbiBzdWZmaXggZWxzZSAnJ1xuICAgICAgICAgIGVtcHR5T3JQcmVmaXggKyBzdHJpbmcgKyBlbXB0eU9yU3VmZml4XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBoYWxmTGVuZ3RoID0gcmVzdExlbmd0aCAvIDJcbiAgICAgICAgICBpZiBoYWxmTGVuZ3RoIDwgMVxuICAgICAgICAgICAgZG9DdXQoYmVmb3JlWzAuLi4tMV0sIGFmdGVyLCBiZWZvcmVbLTEuLi5dICsgc3RyaW5nLCAwKVxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHBpZWNlT2ZCZWZvcmUgPSBiZWZvcmVbLWhhbGZMZW5ndGguLi5dXG4gICAgICAgICAgICBwaWVjZU9mQWZ0ZXIgPSBhZnRlclswLi4uaGFsZkxlbmd0aF1cbiAgICAgICAgICAgIHJlc3RPZkJlZm9yZSA9IGJlZm9yZVswLi4uLWhhbGZMZW5ndGhdXG4gICAgICAgICAgICByZXN0T2ZBZnRlciA9IGFmdGVyW2hhbGZMZW5ndGguLi5dXG4gICAgICAgICAgICBkb0N1dChcbiAgICAgICAgICAgICAgcmVzdE9mQmVmb3JlLFxuICAgICAgICAgICAgICByZXN0T2ZBZnRlcixcbiAgICAgICAgICAgICAgcGllY2VPZkJlZm9yZSArIHN0cmluZyArIHBpZWNlT2ZBZnRlcixcbiAgICAgICAgICAgICAgcmVzdExlbmd0aCAtIHBpZWNlT2ZCZWZvcmUubGVuZ3RoIC0gcGllY2VPZkFmdGVyLmxlbmd0aFxuICAgICAgICAgICAgKVxuICAgICAgKShcbiAgICAgICAgaW5wdXRTdHJpbmdbMC4uLmldLFxuICAgICAgICBpbnB1dFN0cmluZ1tpICsgc2VhcmNoU3RyaW5nLmxlbmd0aC4uLl0sXG4gICAgICAgIHNlYXJjaFN0cmluZyxcbiAgICAgICAgbWF4TGVuZ3RoIC0gc2VhcmNoU3RyaW5nLmxlbmd0aCAtIHByZWZpeC5sZW5ndGggLSBzdWZmaXgubGVuZ3RoXG4gICAgICApXG5dXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvZmlsdGVycy9zdHJpbmdzLmNvZmZlZVxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLnNlcnZpY2VzLmxvY2F0aW9uU3RhdGUnLCBbXVxuXG4ucnVuIFtcbiAgJyRyb290U2NvcGUnLCAnJHdpbmRvdycsICckbG9jYXRpb24nXG4gICgkcm9vdFNjb3BlLCAkd2luZG93LCAkbG9jYXRpb24pIC0+XG4gICAgJHJvb3RTY29wZS4kb24gJyRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3MnLCAtPiAkbG9jYXRpb24uJCRhY3R1YWxQYXRoID0gJGxvY2F0aW9uLnBhdGgoKVxuICAgICRyb290U2NvcGUuJHdhdGNoICgtPiAkbG9jYXRpb24ucGF0aCgpKSwgKG5ld0xvY2F0aW9uKSAtPiAkbG9jYXRpb24uaXNIaXN0b3J5Q2hhbmdlZCA9ICRsb2NhdGlvbi4kJGFjdHVhbFBhdGggaXMgbmV3TG9jYXRpb25cbiAgICByZXR1cm5cbl1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2aWNlcy9sb2NhdGlvblN0YXRlLmNvZmZlZVxuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5hbmd1bGFyLm1vZHVsZSAnbmdFeHRlbmRzLnNlcnZpY2VzLnBsYXlSb3V0ZXMnLCBbXVxuXG4ucHJvdmlkZXIgJ3BsYXlSb3V0ZXMnLCBbLT5cbiAgQGpzUm91dGVzID0gd2luZG93LlJvdXRlc1xuICBAJGdldCA9IFsnJGh0dHAnLCAoJGh0dHApID0+XG4gICAgd3JhcEh0dHAgPSAoZm4pIC0+IC0+XG4gICAgICByb3V0ZU9iamVjdCA9IGZuLmFwcGx5KEAsIGFyZ3VtZW50cylcbiAgICAgIGh0dHBNZXRob2QgPSByb3V0ZU9iamVjdC5tZXRob2QudG9Mb3dlckNhc2UoKVxuICAgICAgdXJsID0gcm91dGVPYmplY3QudXJsXG4gICAgICByZXMgPVxuICAgICAgICAkcm91dGU6IHJvdXRlT2JqZWN0XG4gICAgICAgIG1ldGhvZDogaHR0cE1ldGhvZFxuICAgICAgICB1cmw6IHVybFxuICAgICAgICBhYnNvbHV0ZVVybDogcm91dGVPYmplY3QuYWJzb2x1dGVVUkxcbiAgICAgICAgd2ViU29ja2V0VXJsOiByb3V0ZU9iamVjdC53ZWJTb2NrZXRVUkxcbiAgICAgIHJlc1todHRwTWV0aG9kXSA9IChvcHRpb25zKSAtPiAkaHR0cFtodHRwTWV0aG9kXSh1cmwsIG9wdGlvbnMpXG4gICAgICByZXNcblxuICAgIChhZGRSb3V0ZXMgPSAocGxheVJvdXRlc09iamVjdCwganNSb3V0ZXNPYmplY3QpIC0+XG4gICAgICBmb3Iga2V5LCB2YWx1ZSBvZiBqc1JvdXRlc09iamVjdFxuICAgICAgICBpZiBhbmd1bGFyLmlzRnVuY3Rpb24gdmFsdWVcbiAgICAgICAgICBwbGF5Um91dGVzT2JqZWN0W2tleV0gPSB3cmFwSHR0cCh2YWx1ZSlcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHBsYXlSb3V0ZXNPYmplY3Rba2V5XSA9IHt9ICB1bmxlc3Mga2V5IG9mIHBsYXlSb3V0ZXNPYmplY3RcbiAgICAgICAgICBhZGRSb3V0ZXMocGxheVJvdXRlc09iamVjdFtrZXldLCB2YWx1ZSlcbiAgICAgIHJldHVyblxuICAgICkocGxheVJvdXRlcyA9IHt9LCBAanNSb3V0ZXMpXG4gICAgcGxheVJvdXRlc1xuICBdXG4gIHJldHVyblxuXVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZpY2VzL3BsYXlSb3V0ZXMuY29mZmVlXG4gKiovIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAoIWdsb2JhbC5kb2N1bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImpRdWVyeS5leHRlbmRzIHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnbG9iYWw7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy92YXJzL3dpbmRvdy5qc1xuICoqLyIsIid1c2Ugc3RyaWN0J1xuXG5yZXF1aXJlKCcuL2xvY2F0aW9uU3RhdGUuY29mZmVlJylcblxuYW5ndWxhci5tb2R1bGUgJ25nRXh0ZW5kcy5zZXJ2aWNlcy5yZXRhaW5TY3JvbGwnLCBbJ25nRXh0ZW5kcy5zZXJ2aWNlcy5sb2NhdGlvblN0YXRlJ11cblxuLnByb3ZpZGVyICdyZXRhaW5TY3JvbGwnLCBbLT5cbiAgQHRhcmdldCA9IG51bGxcbiAgQGluYWN0aXZlID0gZmFsc2VcbiAgQHRyYWNraW5nID0gZmFsc2VcbiAgQHBvc2l0aW9ucyA9IHt9XG4gIEBtYXhUcnlDb3VudCA9IDEwXG4gIEB3aGV0aGVyU2Nyb2xsRXZhbHVhdG9yID0gWyckbG9jYXRpb24nLCAoJGxvY2F0aW9uKSAtPiAkbG9jYXRpb24uaXNIaXN0b3J5Q2hhbmdlZF1cbiAgQGlzRGVsYXllZEV2YWx1YXRvciA9IFstPiBmYWxzZV1cbiAgQCRnZXQgPSBbLT4gQF1cbiAgcmV0dXJuXG5dXG5cbi5ydW4gW1xuICAnJHJvb3RTY29wZScsICdyZXRhaW5TY3JvbGwnLCAnJGxvY2F0aW9uJywgJyR0aW1lb3V0JywgJyRpbmplY3RvcidcbiAgKCRyb290U2NvcGUsIHJldGFpblNjcm9sbCwgJGxvY2F0aW9uLCAkdGltZW91dCwgJGluamVjdG9yKSAtPlxuICAgICR0YXJnZXQgPSAkKHJldGFpblNjcm9sbC50YXJnZXQgb3Igd2luZG93KVxuICAgICR0YXJnZXQub24gJ3Njcm9sbCcsIC0+IHJldGFpblNjcm9sbC5wb3NpdGlvbnNbJGxvY2F0aW9uLnVybCgpXSA9ICR0YXJnZXQuc2Nyb2xsVG9wKCkgIGlmIHJldGFpblNjcm9sbC50cmFja2luZ1xuXG4gICAgZm9yIGV2ZW50IGluIFsnJHJvdXRlQ2hhbmdlU3VjY2VzcycsICckc3RhdGVDaGFuZ2VTdWNjZXNzJ11cbiAgICAgICRyb290U2NvcGUuJG9uIGV2ZW50LCAtPiByZXRhaW5TY3JvbGwuaW5hY3RpdmUgPSByZXRhaW5TY3JvbGwudHJhY2tpbmcgPSBmYWxzZVxuICAgICRyb290U2NvcGUuJG9uICckdmlld0NvbnRlbnRMb2FkZWQnLCAoZSkgLT5cbiAgICAgIGlmIHJldGFpblNjcm9sbC5pbmFjdGl2ZSBvciBub3QgJGluamVjdG9yLmludm9rZShyZXRhaW5TY3JvbGwud2hldGhlclNjcm9sbEV2YWx1YXRvcilcbiAgICAgICAgY29uc29sZS5sb2cgXCJtb3ZlIHRvIHNjcm9sbCB0b3AgJW9cIiwgJHRhcmdldFswXVxuICAgICAgICAkdGFyZ2V0LnNjcm9sbFRvcCgwKVxuICAgICAgICByZXRhaW5TY3JvbGwudHJhY2tpbmcgPSB0cnVlXG4gICAgICBlbHNlXG4gICAgICAgIGlzQ2FuY2VsID0gZmFsc2VcbiAgICAgICAgb2ZmU2NvcGVEZXN0cm95ID0gZS50YXJnZXRTY29wZS4kb24gJyRkZXN0cm95JywgLT4gaXNDYW5jZWwgPSB0cnVlOyBvZmZTY3JvbGxDYW5jZWxlcigpXG4gICAgICAgIG9mZlNjcm9sbENhbmNlbGVyID0gLT4gJHRhcmdldC5vZmYgJ3Njcm9sbC5yZXRhaW5TY3JvbGwtY2FuY2VsZXInICsgZS50YXJnZXRTY29wZS4kaWRcbiAgICAgICAgb25TY3JvbGxDYW5jZWxlciA9IC0+ICR0YXJnZXQub25lICdzY3JvbGwucmV0YWluU2Nyb2xsLWNhbmNlbGVyJyArIGUudGFyZ2V0U2NvcGUuJGlkLCAtPiBpc0NhbmNlbCA9IHRydWU7IG9mZlNjb3BlRGVzdHJveSgpXG4gICAgICAgICR0aW1lb3V0KC0+XG4gICAgICAgICAgaWYgaXNDYW5jZWxcbiAgICAgICAgICAgIGNvbnNvbGUubG9nICdDYW5jZWwgc2Nyb2xsaW5nICVvJywgJHRhcmdldFswXVxuICAgICAgICAgICAgcmV0YWluU2Nyb2xsLnRyYWNraW5nID0gdHJ1ZVxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRyeUNvdW50ID0gcmV0YWluU2Nyb2xsLm1heFRyeUNvdW50XG4gICAgICAgICAgICBzY3JvbGxUb3AgPSByZXRhaW5TY3JvbGwucG9zaXRpb25zWyRsb2NhdGlvbi51cmwoKV0gb3IgMFxuICAgICAgICAgICAgKHRyeVNjcm9sbCA9IC0+XG4gICAgICAgICAgICAgIGlmIGlzQ2FuY2VsXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cgJ0NhbmNlbCBzY3JvbGxpbmcgJW8nLCAkdGFyZ2V0WzBdXG4gICAgICAgICAgICAgICAgcmV0YWluU2Nyb2xsLnRyYWNraW5nID0gdHJ1ZVxuICAgICAgICAgICAgICBlbHNlIGlmICRpbmplY3Rvci5pbnZva2UocmV0YWluU2Nyb2xsLmlzRGVsYXllZEV2YWx1YXRvcilcbiAgICAgICAgICAgICAgICAkdGltZW91dCh0cnlTY3JvbGwsIDIwMClcbiAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIG9mZlNjcm9sbENhbmNlbGVyKClcbiAgICAgICAgICAgICAgICAkdGFyZ2V0LnNjcm9sbFRvcChzY3JvbGxUb3ApXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cgXCIjezEgKyByZXRhaW5TY3JvbGwubWF4VHJ5Q291bnQgLSB0cnlDb3VudH0gdHJ5IG1vdmUgdG8gc2Nyb2xsICN7JHRhcmdldC5zY3JvbGxUb3AoKX0gLyAje3Njcm9sbFRvcH0gJW9cIiwgJHRhcmdldFswXVxuICAgICAgICAgICAgICAgIGlmICR0YXJnZXQuc2Nyb2xsVG9wKCkgaXMgc2Nyb2xsVG9wIG9yIC0tdHJ5Q291bnQgPD0gMFxuICAgICAgICAgICAgICAgICAgcmV0YWluU2Nyb2xsLnRyYWNraW5nID0gdHJ1ZVxuICAgICAgICAgICAgICAgICAgb2ZmU2NvcGVEZXN0cm95KClcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICBvblNjcm9sbENhbmNlbGVyKClcbiAgICAgICAgICAgICAgICAgICR0aW1lb3V0KHRyeVNjcm9sbCwgMTAwKVxuICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICkoKVxuICAgICAgICAgIHJldHVyblxuICAgICAgICAsIDEwMClcbiAgICAgIHJldHVyblxuICAgIHJldHVyblxuXVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZpY2VzL3JldGFpblNjcm9sbC5jb2ZmZWVcbiAqKi8iLCIndXNlIHN0cmljdCdcblxuY2xhc3MgU2VhcmNoRm9ybVxuICBjb25zdHJ1Y3RvcjogKEBvcHRpb25zKSAtPlxuICAgIEBvcHRpb25zID1cbiAgICAgIGFjdGlvbjogQG9wdGlvbnMgIGlmIGFuZ3VsYXIuaXNGdW5jdGlvbiBAb3B0aW9uc1xuICAgIEBvcHRpb25zID0gYW5ndWxhci5leHRlbmQoXG4gICAgICBkZWZhdWx0czoge31cbiAgICAgIHByZVN1Ym1pdDogKGZvcm0sIGZpbHRlcnMsIHVuZmlsdGVycykgLT5cbiAgICAgIHByZVJlc2V0OiAoZm9ybSkgLT5cbiAgICAgIHN1Ym1pdDogKGZvcm0sIGZpbHRlcnMsIHVuZmlsdGVycykgLT5cbiAgICAgIHJlc2V0OiAoZm9ybSkgLT5cbiAgICAgIGFjdGlvbjogKGZvcm0pIC0+XG4gICAgICAjdHJhbnNmb3JtOiAoa2V5LCB2YWx1ZSkgLT4gdmFsdWVcbiAgICAsIEBvcHRpb25zKVxuXG4gICAgQGN1cnJlbnQgPSBhbmd1bGFyLmNvcHkoQG9wdGlvbnMuZGVmYXVsdHMpIG9yIHt9XG4gICAgQGZvcm0gPSBhbmd1bGFyLmNvcHkoQG9wdGlvbnMuZGVmYXVsdHMpIG9yIHt9XG5cbiAgaXNQcmlzdGluZTogLT4gYW5ndWxhci5lcXVhbHMoQGN1cnJlbnQsIEBmb3JtKVxuICBpc0RpcnR5OiAtPiBub3QgQGlzUHJpc3RpbmUoKVxuICBpc0NoYW5nZWQ6IC0+IG5vdCBhbmd1bGFyLmVxdWFscyhAY3VycmVudCwgQG9wdGlvbnMuZGVmYXVsdHMpXG5cbiAgc3VibWl0OiAoZm9ybSwgZmlsdGVycywgdW5maWx0ZXJzKSAtPlxuICAgIGlmIEBvcHRpb25zLnByZVN1Ym1pdD8oZm9ybSwgZmlsdGVycywgdW5maWx0ZXJzKSBpc250IGZhbHNlXG4gICAgICBpZiBmaWx0ZXJzP1xuICAgICAgICBpc0ZpbHRlcmVkID0gKFtrZXksIHZhbHVlXSAgZm9yIGtleSwgdmFsdWUgb2YgZmlsdGVycyBvciB7fSkuZXZlcnkgKGtleVdpdGhWYWx1ZSkgPT5cbiAgICAgICAgICBba2V5LCB2YWx1ZV0gPSBrZXlXaXRoVmFsdWVcbiAgICAgICAgICBhbmd1bGFyLmVxdWFscyhAZm9ybVtrZXldLCB2YWx1ZSwgdHJ1ZSlcbiAgICAgICAgYW5ndWxhci5leHRlbmQoQGZvcm0sIGFuZ3VsYXIuY29weShpZiBpc0ZpbHRlcmVkIHRoZW4gdW5maWx0ZXJzIGVsc2UgZmlsdGVycykpXG4gICAgICBAY3VycmVudCA9IGFuZ3VsYXIuY29weShAZm9ybSlcbiAgICAgIEBvcHRpb25zLnN1Ym1pdD8oZm9ybSwgZmlsdGVycywgdW5maWx0ZXJzKVxuICAgICAgQG9wdGlvbnMuYWN0aW9uPyhmb3JtKVxuICAgIEBcblxuICByZXNldDogKGZvcm0pIC0+XG4gICAgaWYgQG9wdGlvbnMucHJlUmVzZXQ/KGZvcm0pIGlzbnQgZmFsc2VcbiAgICAgIGZvcm0/LiRzZXRQcmlzdGluZT8oKVxuICAgICAgQGN1cnJlbnQgPSBhbmd1bGFyLmNvcHkoQG9wdGlvbnMuZGVmYXVsdHMpIG9yIHt9XG4gICAgICBAZm9ybSA9IGFuZ3VsYXIuY29weShAb3B0aW9ucy5kZWZhdWx0cykgb3Ige31cbiAgICAgIEBvcHRpb25zLnJlc2V0Pyhmb3JtKVxuICAgICAgQG9wdGlvbnMuYWN0aW9uPyhmb3JtKVxuICAgIEBcblxuICBwYXJhbXM6IChyZWZyZXNoLCBkZWZhdWx0cykgLT5cbiAgICBbZGVmYXVsdHMsIHJlZnJlc2hdID0gW3JlZnJlc2gsIGZhbHNlXSAgaWYgYW5ndWxhci5pc09iamVjdCByZWZyZXNoXG5cbiAgICBwYXJhbXMgPSBpZiByZWZyZXNoIGlzIHRydWVcbiAgICAgIGFuZ3VsYXIuY29weShAY3VycmVudClcbiAgICBlbHNlXG4gICAgICBhbmd1bGFyLmNvcHkoQGZvcm0gPSBhbmd1bGFyLmNvcHkoQGN1cnJlbnQpKVxuXG4gICAgZm9yIGtleSBvZiBAb3B0aW9ucy5kZWZhdWx0c1xuICAgICAgcGFyYW1zW2tleV0gPSBwYXJhbXNba2V5XS5maWx0ZXIoKGEpIC0+ICEhYSkgIGlmIGFuZ3VsYXIuaXNBcnJheSBwYXJhbXNba2V5XVxuXG4gICAgcGFyYW1zID0gYW5ndWxhci5leHRlbmQgcGFyYW1zLCBhbmd1bGFyLmNvcHkoZGVmYXVsdHMpXG5cbiAgICBpZiBhbmd1bGFyLmlzRnVuY3Rpb24gQG9wdGlvbnMudHJhbnNmb3JtXG4gICAgICBwYXJhbXNba2V5XSA9IEBvcHRpb25zLnRyYW5zZm9ybShrZXksIHZhbHVlKSAgZm9yIGtleSwgdmFsdWUgb2YgcGFyYW1zXG5cbiAgICBwYXJhbXNcblxuYW5ndWxhci5tb2R1bGUgJ25nRXh0ZW5kcy5zZXJ2aWNlcy5zZWFyY2hGb3JtJywgW11cblxuLmZhY3RvcnkgJ3NlYXJjaEZvcm0nLCBbLT4gKG9wdGlvbnMpIC0+IG5ldyBTZWFyY2hGb3JtKG9wdGlvbnMpXVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZpY2VzL3NlYXJjaEZvcm0uY29mZmVlXG4gKiovIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
